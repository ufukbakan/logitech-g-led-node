import{a as o}from"./chunk-C642IHJO.js";import f from"koffi";import s from"path";import{fileURLToPath as u}from"url";import c from"os";function i(){return typeof exports=="object"?"cjs":"esm"}var n=c.platform(),l=L();function e(){switch(n){case"win32":return`lib/windows/${l}/LogitechLedEnginesWrapper.dll`;default:throw new Error("Unsupported OS Platform")}}function L(){switch(process.arch){case"ia32":return"x32";case"x64":return"x64";default:throw new Error("Unsupported process architecture")}}function r(t){switch(n){case"win32":return d(t);default:throw new Error("Unsupported platform")}}function d(t){return{init:t.func("__stdcall","LogiLedInit","bool",[]),initWithName:t.func("__stdcall","LogiLedInitWithName","bool",["str"]),getConfigOptionNumber:t.func("__stdcall","LogiLedGetConfigOptionNumber","bool",["str","double*"]),getConfigOptionBool:t.func("__stdcall","LogiLedGetConfigOptionBool","bool",["str","bool*"]),getConfigOptionColor:t.func("__stdcall","LogiLedGetConfigOptionColor","bool",["str","int*","int*","int*"]),getConfigOptionKeyInput:t.func("__stdcall","LogiLedGetConfigOptionKeyInput","bool",["str","str*","int"]),setTargetDevice:t.func("__stdcall","LogiLedSetTargetDevice","bool",["int"]),getSdkVersion:t.func("__stdcall","LogiLedGetSdkVersion","bool",["int*","int*","int*"]),saveCurrentLighting:t.func("__stdcall","LogiLedSaveCurrentLighting","bool",[]),setLighting:t.func("__stdcall","LogiLedSetLighting","bool",["int","int","int"]),restoreLighting:t.func("__stdcall","LogiLedRestoreLighting","bool",[]),flashLighting:t.func("__stdcall","LogiLedFlashLighting","bool",["int","int","int","int","int"]),pulseLighting:t.func("__stdcall","LogiLedPulseLighting","bool",["int","int","int","int","int"]),stopEffects:t.func("__stdcall","LogiLedStopEffects","bool",[]),excludeKeysFromBitmap:t.func("__stdcall","LogiLedExcludeKeysFromBitmap","bool",["int*","int"]),setLightingFromBitmap:t.func("__stdcall","LogiLedSetLightingFromBitmap","bool",["int*"]),setLightingForKeyWithScanCode:t.func("__stdcall","LogiLedSetLightingForKeyWithScanCode","bool",["int","int","int","int"]),setLightingForKeyWithHidCode:t.func("__stdcall","LogiLedSetLightingForKeyWithHidCode","bool",["int","int","int","int"]),setLightingForKeyWithQuartzCode:t.func("__stdcall","LogiLedSetLightingForKeyWithQuartzCode","bool",["int","int","int","int"]),setLightingForKeyWithKeyName:t.func("__stdcall","LogiLedSetLightingForKeyWithKeyName","bool",["int","int","int","int"]),saveLightingForKey:t.func("__stdcall","LogiLedSaveLightingForKey","bool",["int"]),restoreLightingForKey:t.func("__stdcall","LogiLedRestoreLightingForKey","bool",["int"]),flashSingleKey:t.func("__stdcall","LogiLedFlashSingleKey","bool",["int","int","int","int","int","int"]),pulseSingleKey:t.func("__stdcall","LogiLedPulseSingleKey","bool",["int","int","int","int","int","int","int","int","bool"]),stopEffectsOnKey:t.func("__stdcall","LogiLedStopEffectsOnKey","bool",["int"]),setLightingForTargetZone:t.func("__stdcall","LogiLedSetLightingForTargetZone","bool",["int","int","int","int","int"]),shutdown:t.func("__stdcall","LogiLedShutdown","void",[])}}var a=i()==="cjs"?o:u(import.meta.url),h=s.dirname(a),p=s.resolve(h,"..",e()),_=f.load(p),m=r(_),x=m;export{x as default};
